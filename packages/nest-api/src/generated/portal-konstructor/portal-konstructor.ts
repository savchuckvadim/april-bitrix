/**
 * Generated by orval v7.13.0 🍺
 * Do not edit manually.
 * April backend
 * API for april-bitrix  hooks and  frontends
 * OpenAPI spec version: 1.0
 */
import type { UpdateWebhookDto } from '.././model';

import { customAxios } from '../../lib/back-api';

export const getPortalKonstructor = () => {
    /**
     * @summary Get portal by id
     */
    const portalGetPortal = (id: number) => {
        return customAxios<void>({ url: `/api/portal/${id}`, method: 'GET' });
    };
    /**
     * @summary Get portal by domain
     */
    const portalGetPortalByDomain = (domain: string) => {
        return customAxios<void>({
            url: `/api/portal/domain/${domain}`,
            method: 'GET',
        });
    };
    /**
     * @summary Get all portals
     */
    const portalGetPortals = () => {
        return customAxios<void>({ url: `/api/portal`, method: 'GET' });
    };
    /**
     * @summary Update webhook by domain
     */
    const portalUpdateWebhook = (
        domain: string,
        updateWebhookDto: UpdateWebhookDto,
    ) => {
        return customAxios<void>({
            url: `/api/portal/webhook/${domain}`,
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            data: updateWebhookDto,
        });
    };
    const templateBaseGetOfferTemplateByDomain = (domain: string) => {
        return customAxios<void>({
            url: `/api/template-base/offer/${domain}`,
            method: 'GET',
        });
    };
    const templateBaseGetTemplatesByDomain = (domain: string) => {
        return customAxios<void>({
            url: `/api/template-base/templates/${domain}`,
            method: 'GET',
        });
    };
    const templateBaseGetTemplates = () => {
        return customAxios<void>({
            url: `/api/template-base/templates`,
            method: 'GET',
        });
    };
    const providerGetProvider = (id: number) => {
        return customAxios<void>({ url: `/api/provider/${id}`, method: 'GET' });
    };
    const providerGetProviderByDomain = (domain: string) => {
        return customAxios<void>({
            url: `/api/provider/domain/${domain}`,
            method: 'GET',
        });
    };
    return {
        portalGetPortal,
        portalGetPortalByDomain,
        portalGetPortals,
        portalUpdateWebhook,
        templateBaseGetOfferTemplateByDomain,
        templateBaseGetTemplatesByDomain,
        templateBaseGetTemplates,
        providerGetProvider,
        providerGetProviderByDomain,
    };
};
export type PortalGetPortalResult = NonNullable<
    Awaited<
        ReturnType<ReturnType<typeof getPortalKonstructor>['portalGetPortal']>
    >
>;
export type PortalGetPortalByDomainResult = NonNullable<
    Awaited<
        ReturnType<
            ReturnType<typeof getPortalKonstructor>['portalGetPortalByDomain']
        >
    >
>;
export type PortalGetPortalsResult = NonNullable<
    Awaited<
        ReturnType<ReturnType<typeof getPortalKonstructor>['portalGetPortals']>
    >
>;
export type PortalUpdateWebhookResult = NonNullable<
    Awaited<
        ReturnType<
            ReturnType<typeof getPortalKonstructor>['portalUpdateWebhook']
        >
    >
>;
export type TemplateBaseGetOfferTemplateByDomainResult = NonNullable<
    Awaited<
        ReturnType<
            ReturnType<
                typeof getPortalKonstructor
            >['templateBaseGetOfferTemplateByDomain']
        >
    >
>;
export type TemplateBaseGetTemplatesByDomainResult = NonNullable<
    Awaited<
        ReturnType<
            ReturnType<
                typeof getPortalKonstructor
            >['templateBaseGetTemplatesByDomain']
        >
    >
>;
export type TemplateBaseGetTemplatesResult = NonNullable<
    Awaited<
        ReturnType<
            ReturnType<typeof getPortalKonstructor>['templateBaseGetTemplates']
        >
    >
>;
export type ProviderGetProviderResult = NonNullable<
    Awaited<
        ReturnType<
            ReturnType<typeof getPortalKonstructor>['providerGetProvider']
        >
    >
>;
export type ProviderGetProviderByDomainResult = NonNullable<
    Awaited<
        ReturnType<
            ReturnType<
                typeof getPortalKonstructor
            >['providerGetProviderByDomain']
        >
    >
>;
