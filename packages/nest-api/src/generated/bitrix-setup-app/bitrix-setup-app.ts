/**
 * Generated by orval v7.13.0 🍺
 * Do not edit manually.
 * April backend
 * API for april-bitrix  hooks and  frontends
 * OpenAPI spec version: 1.0
 */
import type {
    BitrixAppGetByPortalParams,
    BitrixAppGetParams,
    CreateBitrixAppDto,
    SuccessResponseDto,
    UpdateBitrixAppDto,
} from '.././model';

import { customAxios } from '../../lib/back-api';

export const getBitrixSetupApp = () => {
    /**
     * Создает новое приложение или обновляет существующее в системе Bitrix24
     * @summary Создать или обновить приложение Bitrix24
     */
    const bitrixAppStoreOrUpdate = (createBitrixAppDto: CreateBitrixAppDto) => {
        return customAxios<SuccessResponseDto>({
            url: `/api/bitrix-app/store-or-update`,
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            data: createBitrixAppDto,
        });
    };
    /**
     * Получает информацию о приложении по домену и коду
     * @summary Получить приложение Bitrix24
     */
    const bitrixAppGet = (params: BitrixAppGetParams) => {
        return customAxios<SuccessResponseDto>({
            url: `/api/bitrix-app/get`,
            method: 'GET',
            params,
        });
    };
    /**
     * Получает список всех приложений в системе
     * @summary Получить все приложения Bitrix24
     */
    const bitrixAppAll = () => {
        return customAxios<SuccessResponseDto>({
            url: `/api/bitrix-app/all`,
            method: 'GET',
        });
    };
    /**
     * Получает все приложения для указанного портала Bitrix24
     * @summary Получить приложения по порталу
     */
    const bitrixAppGetByPortal = (params: BitrixAppGetByPortalParams) => {
        return customAxios<SuccessResponseDto>({
            url: `/api/bitrix-app/get-by-portal`,
            method: 'GET',
            params,
        });
    };
    /**
     * Обновляет существующее приложение по ID
     * @summary Обновить приложение Bitrix24
     */
    const bitrixAppUpdate = (
        id: number,
        updateBitrixAppDto: UpdateBitrixAppDto,
    ) => {
        return customAxios<SuccessResponseDto>({
            url: `/api/bitrix-app/${id}`,
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            data: updateBitrixAppDto,
        });
    };
    /**
     * Удаляет приложение по ID
     * @summary Удалить приложение Bitrix24
     */
    const bitrixAppDelete = (id: number) => {
        return customAxios<SuccessResponseDto>({
            url: `/api/bitrix-app/${id}`,
            method: 'DELETE',
        });
    };
    return {
        bitrixAppStoreOrUpdate,
        bitrixAppGet,
        bitrixAppAll,
        bitrixAppGetByPortal,
        bitrixAppUpdate,
        bitrixAppDelete,
    };
};
export type BitrixAppStoreOrUpdateResult = NonNullable<
    Awaited<
        ReturnType<
            ReturnType<typeof getBitrixSetupApp>['bitrixAppStoreOrUpdate']
        >
    >
>;
export type BitrixAppGetResult = NonNullable<
    Awaited<ReturnType<ReturnType<typeof getBitrixSetupApp>['bitrixAppGet']>>
>;
export type BitrixAppAllResult = NonNullable<
    Awaited<ReturnType<ReturnType<typeof getBitrixSetupApp>['bitrixAppAll']>>
>;
export type BitrixAppGetByPortalResult = NonNullable<
    Awaited<
        ReturnType<ReturnType<typeof getBitrixSetupApp>['bitrixAppGetByPortal']>
    >
>;
export type BitrixAppUpdateResult = NonNullable<
    Awaited<ReturnType<ReturnType<typeof getBitrixSetupApp>['bitrixAppUpdate']>>
>;
export type BitrixAppDeleteResult = NonNullable<
    Awaited<ReturnType<ReturnType<typeof getBitrixSetupApp>['bitrixAppDelete']>>
>;
