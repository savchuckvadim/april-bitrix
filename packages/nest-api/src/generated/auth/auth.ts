/**
 * Generated by orval v7.13.0 🍺
 * Do not edit manually.
 * April backend
 * API for april-bitrix  hooks and  frontends
 * OpenAPI spec version: 1.0
 */
import type {
    ClientRegistrationRequestDto,
    ClientResponseDto,
    LoginDto,
    LoginResponseDto,
    LogoutResponseDto,
} from '.././model';

import { customAxios } from '../../lib/back-api';

export const getAuth = () => {
    /**
     * @summary Register new client
     */
    const authRegisterClient = (
        clientRegistrationRequestDto: ClientRegistrationRequestDto,
    ) => {
        return customAxios<ClientResponseDto>({
            url: `/api/auth/register-client`,
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            data: clientRegistrationRequestDto,
        });
    };
    /**
     * @summary Login
     */
    const authLogin = (loginDto: LoginDto) => {
        return customAxios<LoginResponseDto>({
            url: `/api/auth/login`,
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            data: loginDto,
        });
    };
    /**
     * @summary Logout
     */
    const authLogout = () => {
        return customAxios<LogoutResponseDto>({
            url: `/api/auth/logout`,
            method: 'POST',
        });
    };
    /**
     * @summary Confirm email
     */
    const authConfirmEmail = (token: string) => {
        return customAxios<LogoutResponseDto>({
            url: `/api/auth/confirm/${token}`,
            method: 'GET',
        });
    };
    /**
     * @summary Resend confirmation
     */
    const authResendConfirmation = () => {
        return customAxios<LogoutResponseDto>({
            url: `/api/auth/resend-confirmation`,
            method: 'POST',
        });
    };
    return {
        authRegisterClient,
        authLogin,
        authLogout,
        authConfirmEmail,
        authResendConfirmation,
    };
};
export type AuthRegisterClientResult = NonNullable<
    Awaited<ReturnType<ReturnType<typeof getAuth>['authRegisterClient']>>
>;
export type AuthLoginResult = NonNullable<
    Awaited<ReturnType<ReturnType<typeof getAuth>['authLogin']>>
>;
export type AuthLogoutResult = NonNullable<
    Awaited<ReturnType<ReturnType<typeof getAuth>['authLogout']>>
>;
export type AuthConfirmEmailResult = NonNullable<
    Awaited<ReturnType<ReturnType<typeof getAuth>['authConfirmEmail']>>
>;
export type AuthResendConfirmationResult = NonNullable<
    Awaited<ReturnType<ReturnType<typeof getAuth>['authResendConfirmation']>>
>;
